pipeline{   
        agent any 
        tools{
                maven 'maven3.9.6' 
              }
        stages{
                stage('CheckOuteCode'){
                                        steps{
                                                sendSlackNotifications("STARTED") //This will send the build started notification 
                                                git credentialsId: 'f4faf106-b7ac-4093-8573-4ec7afa236f0', url: 'https://github.com/devops26012024/maven-web-application.git'
                                              }
                                        }
                stage('Build'){
                                        steps{
                                                sh "mvn clean package"
                                      }
                                 }
               /* stage('ExecuteSonarQubeReport'){
                                                    steps{
                                                            sh "mvn clean sonar:sonar"
                                                           }
                                                     }
                stage('UploadArtifcatsIntoNexus'){
                                                        steps{
                                                                sh "mvn clean deploy"
                                                               }
                                                       } 
               stage('DeployAppIntoTomcat'){
                                                       steps{
							                                	sshagent(['1d853462-1478-4e2a-b612-b0738b822cd6']) {
															                                                        sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@43.204.215.47:/opt/apache-tomcat-9.0.88/webapps/"
														                                                            }
                                                       }                                														                                                                                            
							 }*/
					    
                 
               }
               post {
  success {
                sendSlackNotifications(currentBuild.result)
            }
  failure {
                sendSlackNotifications(currentBuild.result)
            }
        }

         }
         
         
    def sendSlackNotifications(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESS'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'" //env variable is accessible from groovy code there are some inbuilt variable 
             //these are all env variable JOB_NAME,       
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESS') { 
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary, channel : "citibank-project") // Here we can mention channel name. This is inbuilt function, once you install slack notification plugin it is going to available here 
  }
